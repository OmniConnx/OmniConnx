{"version":3,"sources":["reduxcomps/actions/index.js","http-common.js","services/user-service.js","components/add-user-component.js","components/user-component.js","components/user-list.js","components/Navbar/LoginModal.js","static/images/logo.png","components/Navbar/NavigationBar.js","components/Footer/Footer.js","static/images/logo1.png","static/images/landing1.png","static/images/mentor.png","static/images/financial.png","static/images/reviews.png","static/images/skills.png","components/Landing/Landing.js","components/Profile/UserProfile.js","components/Posts/Posts.js","components/MakePost/MakePost.js","reduxcomps/reducers/loginReducer.js","reduxcomps/reducers/postReducer.js","reduxcomps/reducers/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["SUBMIT_POST","LOGIN_SUBMIT","axios","create","baseURL","headers","API_URL","get","authHeader","AddUser","props","onChangeUsername","bind","saveUser","newUser","state","id","username","submitted","e","this","setState","target","value","data","UserDataService","then","response","console","log","catch","Form","Modal","Body","Group","className","controlId","Label","Control","type","placeholder","required","onChange","name","Text","Footer","Button","variant","onClick","Component","LoginModal","useState","show","setShow","Nav","Link","onHide","backdrop","keyboard","Header","closeButton","Title","to","component","NavigationBar","Navbar","expand","Container","Toggle","aria-controls","Collapse","Brand","href","src","Logo","width","height","alt","Landing","Logo1","Landing1","class","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shape-rendering","d","xlinkHref","x","y","fill","Mentor","Financial","Reviews","Skills","UserProfile","theUrl","xmlHttpReq","XMLHttpRequest","open","send","JSON","parse","responseText","httpGet","latestUser","length","examplePostData","_id","user","profPic","tags","image","title","description","Posts","postList","map","post","tag","MakePost","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","images","style","setTitle","setDesc","tagTemp","setTempTag","tagsSt","setTag","loginReducer","action","payload","email","password","postReducer","desc","tag1","tag2","tag3","combineReducers","posts","users","POST_STATE","persistedState","serializedState","localStorage","getItem","err","loadState","store","createStore","reducers","subscribe","stringify","setItem","saveState","getState","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23afbbb7.chunk.js","sourcesContent":["export const SUBMIT_POST = 'SUBMIT_POST';\r\nexport const LOGIN_SUBMIT = 'LOGIN_SUBMIT';\r\n\r\nexport const submitPost = (title, desc, image, tag1, tag2, tag3) => {\r\n\treturn {\r\n\t\ttype: SUBMIT_POST,\r\n\t\tpayload: {\r\n\t\t\ttitle,\r\n\t\t\tdesc,\r\n\t\t\timage,\r\n\t\t\ttag1,\r\n\t\t\ttag2,\r\n\t\t\ttag3,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const loginSubmit = (email, password) => {\r\n\treturn {\r\n\t\ttype: LOGIN_SUBMIT,\r\n\t\tpayload: {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t},\r\n\t};\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nimport axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n  //getPublicContent() {\r\n  //  return axios.post(API_URL + 'signup');\r\n  //}\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n\r\n/*\r\nclass UserDataService {\r\n  getAll() {\r\n    return http.get(\"/user\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/user/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/user/signup\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/user/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/user/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/users`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/users?title=${title}`);\r\n  }\r\n  \r\n}\r\n\r\nexport default new UserDataService();\r\n*/","import React, { Component , useState} from \"react\";\r\nimport UserDataService from \"../services/user-service\";\r\nimport { Modal, Button, Nav, Form } from \"react-bootstrap\"\r\n\r\nexport default class AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    //this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveUser = this.saveUser.bind(this);\r\n    this.newUser = this.newUser.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      username: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  saveUser() {\r\n    var data = {\r\n      username: this.state.username,\r\n    };\r\n\r\n    UserDataService.create(data)\r\n      .then(response => {\r\n        console.log(response.data.username)\r\n        this.setState({\r\n          id: response.data.id,\r\n          username: response.data.username,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newUser() {\r\n    this.setState({\r\n      id: null,\r\n      username: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"submit-form\">\r\n      //   {this.state.submitted ? (\r\n      //     <div>\r\n      //       <h4>You submitted successfully!</h4>\r\n      //       <button className=\"btn btn-success\" onClick={this.newUser}>\r\n      //         Add\r\n      //       </button>\r\n      //     </div>\r\n      //   ) : (\r\n      //     <div>\r\n      //       <div className=\"form-group\">\r\n      //         <label htmlFor=\"username\">Username</label>\r\n      //         <input\r\n      //           type=\"text\"\r\n      //           className=\"form-control\"\r\n      //           id=\"username\"\r\n      //           required\r\n      //           value={this.state.username}\r\n      //           onChange={this.onChangeUsername}\r\n      //           name=\"username\"\r\n      //         />\r\n      //       </div>\r\n\r\n      //       <button onClick={this.saveUser} className=\"btn btn-success\">\r\n      //         Submit\r\n      //       </button>\r\n      //     </div>\r\n      //   )}\r\n      // </div>\r\n      <>\r\n        <Form>\r\n          <Modal.Body>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter username\" id=\"username\"\r\n                required\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                name=\"username\"/>\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            {/* <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"remember me\" />\r\n                    const history = useHistory();\r\n\r\n          const handleClick = () => {\r\n              history.push(\"/path/to/push\");\r\n          }\r\n            </Form.Group> */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={this.saveUser} className=\"btn btn-success\">\r\n              Submit\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n    </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport UserDataService from \"../services/user-service\";\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.getUser = this.getUser.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    //this.deleteUser = this.deleteUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n        id: null,\r\n        username: \"\",\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    const username = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          username: username\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getUser(id) {\r\n    UserDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentUser: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  updateUser() {\r\n    UserDataService.update(\r\n      this.state.currentUser.id,\r\n      this.state.currentUser\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The user was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  \r\n/*\r\n\r\n  deleteTutorial() {    \r\n    UserDataService.delete(this.state.currentUser.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/users')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n     <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteUser}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateUser}\r\n            >\r\n              Update\r\n            </button>\r\n*/\r\n  \r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentUser ? (\r\n          <div className=\"edit-form\">\r\n            <h4>User</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  value={currentUser.username}\r\n                  onChange={this.onChangeUsername}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a User...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport UserDataService from \"../services/user-service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.onChangeSearchFirstName = this.onChangeSearchFirstName.bind(this);\r\n    this.retrieveUsers = this.retrieveUsers.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveUser = this.setActiveUser.bind(this);\r\n    //this.removeAllUsers = this.removeAllUsers.bind(this);\r\n    //this.searchUsername = this.searchUsername.bind(this);\r\n\r\n    this.state = {\r\n      users: [],\r\n      currentUser: null,\r\n      //array of Users\r\n      currentIndex: -1\r\n      //searchUsername: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  /*\r\n  onChangeSearchTitle(e) {\r\n    const searchUser = e.target.value;\r\n\r\n    this.setState({\r\n      searchUser: searchUsername\r\n    });\r\n  }\r\n*/\r\n\r\n  retrieveUsers() {\r\n    UserDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveUsers();\r\n    this.setState({\r\n      currentUser: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveUser(user, index) {\r\n    this.setState({\r\n      currentUser: user,\r\n      currentIndex: index\r\n    });\r\n  }\r\n/*\r\n  removeAllUsers() {\r\n    SearchDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchUser() {\r\n    SearchUser.findByName(this.state.searchUser)\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n*/\r\n  \r\n  render() {\r\n    //const { searchUsername, users, currentUser, currentIndex } = this.state;\r\n    const { users, currentUser, currentIndex } = this.state;\r\n\r\n/*\r\n<div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by name\"\r\n              value={searchUsername}\r\n              onChange={this.onChangeSearchUser}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchUsername}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n           <ul className=\"list-group\">\r\n            {users &&\r\n              users.map((user, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveUser(user, index)}\r\n                  key={index}\r\n                >\r\n                  {user.username}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllUsers}\r\n          >\r\n            Remove All\r\n          </button>\r\n\r\n*/\r\n    return (\r\n      <div className=\"list row\">\r\n       Search\r\n        <div className=\"col-md-6\">\r\n          <h4>User List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {users &&\r\n              users.map((user, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveUser(user, index)}\r\n                  key={index}\r\n                >\r\n                  {user.username}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentUser ? (\r\n            <div>\r\n              <h4>User</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Username:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.username}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/user/\" + currentUser.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a User...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { loginSubmit } from '../../reduxcomps/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport React, { useState } from \"react\"\r\nimport { Modal, Button, Nav, Form } from \"react-bootstrap\"\r\nimport AddUser from \"../add-user-component\";\r\nimport User from \"../user-component\";\r\nimport UserList from \"../user-list\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, useHistory } from \"react-router-dom\"\r\n\r\nfunction LoginModal() {\r\n  const [show, setShow] = useState(false)\r\n  const handleShow = () => setShow(true)\r\n  const handleClose = () => setShow(false)\r\n  return (\r\n    <>\r\n      <Nav.Link onClick={handleShow} >Login</Nav.Link>\r\n\r\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Log In</Modal.Title>\r\n        </Modal.Header>\r\n        <Switch>\r\n\r\n          <Route to=\"/signup\" component={AddUser} />\r\n\r\n        </Switch>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\n// export default LoginModal\r\n\r\n// function LoginModal() {\r\n// \tconst [show, setShow] = useState(false);\r\n\r\n// \tconst handleShow = () => setShow(true);\r\n// \tconst handleClose = () => setShow(false);\r\n\r\n// \t// useState + Redux\r\n\r\n// \tconst dispatch = useDispatch();\r\n// \tconst [emailS, setEmail] = useState('');\r\n// \tconst [passwordS, setPassword] = useState('');\r\n// \tfunction handleSubmit(event) {\r\n// \t\tevent.preventDefault();\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t\t<Nav.Link className=\"nav-item\" onClick={handleShow}>Login</Nav.Link>\r\n\r\n// \t\t\t<Modal\r\n// \t\t\t\tshow={show}\r\n// \t\t\t\tonHide={handleClose}\r\n// \t\t\t\tbackdrop=\"static\"\r\n// \t\t\t\tkeyboard={false}\r\n// \t\t\t>\r\n// \t\t\t\t<Modal.Header closeButton>\r\n// \t\t\t\t\t<Modal.Title>Log In</Modal.Title>\r\n// \t\t\t\t</Modal.Header>\r\n// \t\t\t\t<Form onSubmit={handleSubmit}>\r\n// \t\t\t\t\t<Modal.Body>\r\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n// \t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n// \t\t\t\t\t\t\t<Form.Control\r\n// \t\t\t\t\t\t\t\ttype=\"email\"\r\n// \t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n// \t\t\t\t\t\t\t\tonChange={(e) => {\r\n// \t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\r\n// \t\t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n// \t\t\t\t\t\t\t\tWe'll never share your email with anyone else.\r\n// \t\t\t\t\t\t\t</Form.Text>\r\n// \t\t\t\t\t\t</Form.Group>\r\n\r\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n// \t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n// \t\t\t\t\t\t\t<Form.Control\r\n// \t\t\t\t\t\t\t\ttype=\"password\"\r\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n// \t\t\t\t\t\t\t\tonChange={(e) => {\r\n// \t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\r\n// \t\t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t</Form.Group>\r\n\r\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n// \t\t\t\t\t\t\t<Form.Check type=\"checkbox\" label=\"remember me\" />\r\n// \t\t\t\t\t\t</Form.Group>\r\n// \t\t\t\t\t</Modal.Body>\r\n// \t\t\t\t\t<Modal.Footer>\r\n// \t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n// \t\t\t\t\t\t\tClose\r\n// \t\t\t\t\t\t</Button>\r\n// \t\t\t\t\t\t<Button\r\n// \t\t\t\t\t\t\tvariant=\"primary\"\r\n// \t\t\t\t\t\t\ttype=\"submit\"\r\n// \t\t\t\t\t\t\tonClick={useDispatch(loginSubmit(emailS, passwordS))}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tSubmit\r\n// \t\t\t\t\t\t</Button>\r\n// \t\t\t\t\t\t{/* <button type=\"submit\">Submit</button> */}\r\n// \t\t\t\t\t</Modal.Footer>\r\n// \t\t\t\t</Form>\r\n// \t\t\t</Modal>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\nexport default LoginModal;\r\n","export default __webpack_public_path__ + \"static/media/logo.ac08c986.png\";","import React from \"react\"\r\n// import { NavLink } from \"react-router-dom\"\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport LoginModal from \"./LoginModal\"\r\nimport \"./navbar.css\"\r\nimport Logo from '../../static/images/logo.png'\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    // <div className=\"navbar\">\r\n    //   <div>\r\n    //     <NavLink to=\"/\">OmniConnx</NavLink>\r\n    //   </div>\r\n    //   <div>\r\n    //     <NavLink to=\"/prof\">profileTest</NavLink>\r\n    //     <NavLink to=\"/posts\">Posts</NavLink>\r\n    //   </div>\r\n    // </div>\r\n    <Navbar expand=\"lg\" variant=\"light\" className=\"navbar\">\r\n      <Container>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          {/* Logo Section */}\r\n          <Nav className=\"me-auto\">\r\n            <Navbar.Brand href=\"/\">\r\n              <img\r\n                src={Logo}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"OmniConnx Logo\"\r\n              />\r\n            </Navbar.Brand>\r\n          </Nav>\r\n           \r\n           {/* Links Section */}\r\n          <Nav>\r\n            <Nav.Link className=\"nav-item\" href=\"/posts\">Posts</Nav.Link>\r\n            <Nav.Link className=\"nav-item\" href=\"/prof\">Profile</Nav.Link>\r\n            <LoginModal/>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar\r\n","import React from \"react\"\r\nimport \"./Footer.css\"\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h2>Omniconnx</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/logo1.be188a87.png\";","export default __webpack_public_path__ + \"static/media/landing1.386878e2.png\";","export default __webpack_public_path__ + \"static/media/mentor.788f9af8.png\";","export default __webpack_public_path__ + \"static/media/financial.64dc1be7.png\";","export default __webpack_public_path__ + \"static/media/reviews.d2e76b70.png\";","export default __webpack_public_path__ + \"static/media/skills.a48c239f.png\";","import React from 'react';\r\nimport './Landing.css';\r\nimport Logo1 from '../../static/images/logo1.png'\r\nimport Landing1 from '../../static/images/landing1.png'\r\nimport Mentor from '../../static/images/mentor.png'\r\nimport Financial from '../../static/images/financial.png'\r\nimport Reviews from '../../static/images/reviews.png'\r\nimport Skills from '../../static/images/skills.png'\r\n\r\nfunction Landing() {\r\n\treturn (\r\n\t\t<div className=\"landing\">\r\n\t\t\t\r\n\t\t\t{/* Landing Page 1 */}\r\n\t\t\t<div className=\"hero\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img className=\"logo1\" src={Logo1}/>\r\n\t\t\t\t\t<p>Connecting medical <br/> professionals across the world</p>\r\n\t\t\t\t\t<button>Get Started</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img className=\"landing1\" src={Landing1}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Wave effects */}\r\n\t\t\t<div>\r\n\t\t\t\t<svg class=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n\t\t\t\tviewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\r\n\t\t\t\t<defs>\r\n\t\t\t\t<path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n\t\t\t\t</defs>\r\n\t\t\t\t<g class=\"parallax\">\r\n\t\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"#3C5487\" />\r\n\t\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"#76C9BF\" />\r\n\t\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"#EAD2FF\" />\r\n\t\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"8\" fill=\"#fff\" />\r\n\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t{/* Landing Page 2 */}\r\n\t\t\t<div className=\"hero2\">\r\n\t\t\t\t<h1>MISSION</h1>\r\n\t\t\t\t<p>OmniConnx is established to form a global healthcare community <br/> through which crowdsourced knowledge will support each other in three main areas: </p>\r\n\t\t\t\t<div className=\"blurbs\">\r\n\t\t\t\t\t<div className=\"blurb\">\r\n\t\t\t\t\t\t<img className=\"mentor\" src={Mentor}/>\r\n\t\t\t\t\t\t<h2>Guided <br/> Mentorship</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"blurb\">\r\n\t\t\t\t\t\t<img className=\"financial\" src={Financial}/>\r\n\t\t\t\t\t\t<h2>Financial <br/>Independence</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"blurb\">\r\n\t\t\t\t\t\t<img className=\"reviews\" src={Reviews}/>\r\n\t\t\t\t\t\t<h2>Reliability of <br/>Reviews</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button>Learn More</button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t{/* Landing Page 3 */}\r\n\t\t\t<div className=\"hero\">\r\n\t\t\t\t<img className=\"skills\" src={Skills}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>SKILLS</h1>\r\n\t\t\t\t\t<h2> COMING SOON! </h2>\r\n\t\t\t\t\t<p>Through the use of Skills Update, you will be able to <br/> find\r\n\t\t\t\t\t\tand connect with professionals who share your skills\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<button>Other Features</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react'\r\nimport './userProfile.css'\r\n\r\nfunction UserProfile() {\r\n  function httpGet(theUrl) {\r\n     let xmlHttpReq = new XMLHttpRequest();\r\n     xmlHttpReq.open(\"GET\", theUrl, false); \r\n     xmlHttpReq.send(null);\r\n     return JSON.parse(xmlHttpReq.responseText);\r\n  }\r\n  const data = httpGet('http://localhost:8080/user/');\r\n  const latestUser = data[data.length - 1]\r\n  console.log(latestUser)\r\n  return (\r\n    <div className='userProfile'>\r\n      {/* Main User Area */}\r\n      <div className=\"profmain\">\r\n      <img src=\"https://via.placeholder.com/200\"></img>\r\n        <div>\r\n          {/* <h1>{latestUser[\"username\"]}</h1> */}\r\n          <div className=\"profinfo\">\r\n          <h4>{latestUser[\"username\"]}</h4>\r\n            <h4>Degree</h4>\r\n            <h4>Gender</h4>\r\n            <h4>Other Stuff</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Bio Area */}\r\n      <div className=\"bio\">\r\n        <div className=\"biocard\">\r\n          <p>Bio Area</p>\r\n        </div>\r\n      </div>\r\n      {/* Skills? Area */}\r\n      <div className=\"cards\">\r\n        <div className=\"card\">\r\n          <img src=\"https://via.placeholder.com/100\"></img>\r\n          <p>description</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <img src=\"https://via.placeholder.com/100\"></img>\r\n          <p>description</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <img src=\"https://via.placeholder.com/100\"></img>\r\n          <p>description</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Posts.css\"\r\n\r\nconst examplePostData = [\r\n  {\r\n    _id: \"1234567890\",\r\n    user: {\r\n      username: \"testUser\",\r\n      profPic: \"https://via.placeholder.com/150\",\r\n      // ...\r\n    },\r\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n    image: \"https://via.placeholder.com/600x250\",\r\n    title: \"example name of a post\",\r\n    description: \"this is an example of what a description on our post will look like\",\r\n  },\r\n  {\r\n    _id: \"0123456789\",\r\n    user: {\r\n      username: \"testUser\",\r\n      profPic: \"https://via.placeholder.com/150\",\r\n      // ...\r\n    },\r\n    tags: [\"tag1\", \"tag2\"],\r\n    image: \"https://via.placeholder.com/600x250\",\r\n    title: \"example name of a post number 2\",\r\n    description: \"this is an example of what a description on our post number 2 will look like\",\r\n  },\r\n]\r\n\r\nfunction Posts() {\r\n  function post(postList) {\r\n    return postList.map((post) => {\r\n      const tags = post.tags.map((tag) => {\r\n        return <div>{tag}</div>\r\n      })\r\n      return (\r\n        <div className=\"post\">\r\n          <div className=\"prof\">\r\n            <div>\r\n              <img src={post.user.profPic}></img>\r\n            </div>\r\n            <div>\r\n              <h3>-{post.user.username}</h3>\r\n              <h4>{post.title}</h4>\r\n              <div className=\"tags\">{tags}</div>\r\n            </div>\r\n          </div>\r\n          {post.image ? <img src={post.image}></img> : \"\"}\r\n          <p>{post.description}</p>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"posts\">\r\n      <NavLink className=\"createPost\" to=\"/makepost\">\r\n        + Create A Post\r\n      </NavLink>\r\n      <div className=\"displayPosts\">{post(examplePostData)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n\r\n// <button onClick={post({\r\n//     user:{session.user},\r\n//     tags:[tag1, tag2],\r\n//     title:'example name of a post number 2',\r\n//     image:'./place',\r\n//     description:'this is an example of what a description on our post number 2 will look like',\r\n// })}>\r\n//     post\r\n// </button>\r\n","import React, { useDropzone } from 'react-dropzone';\r\nimport { useState } from 'react';\r\nimport './MakePost.css';\r\n\r\n// Redux imports\r\n// import { useDispatch } from 'react-redux';\r\n// import { submitPost } from '../../reduxcomps/actions';\r\n\r\nfunction MakePost() {\r\n\tconst [files, setFiles] = useState([]);\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t\taccept: 'image/*',\r\n\t\tonDrop: (acceptedFiles) => {\r\n\t\t\tsetFiles(\r\n\t\t\t\tacceptedFiles.map((file) =>\r\n\t\t\t\t\tObject.assign(file, {\r\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t},\r\n\t});\r\n\tconst images = files.map((file) => (\r\n\t\t<div key={file.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={file.preview}\r\n\t\t\t\t\tstyle={{ width: 200, height: 200 }}\r\n\t\t\t\t\talt=\"preview\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t));\r\n\t\r\n\t// For Redux useState variables\r\n\tconst [titles, setTitle] = useState('');\r\n\tconst [descs, setDesc] = useState('');\r\n\tconst [tagTemp, setTempTag] = useState('');\r\n\tconst [tagsSt, setTag] = useState([]);\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<form className=\"form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Title...\"\r\n\t\t\t\t\tclassName='titleInput'\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetTitle(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"text\"\r\n\t\t\t\t\tplaceholder=\"Text (optional)\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetDesc(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div {...getRootProps()} className=\"img-input\">\r\n\t\t\t\t\t<input {...getInputProps()} />\r\n\t\t\t\t\t{files.length !== 0 ? (\r\n\t\t\t\t\t\timages\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<p>Drop files here or </p>\r\n\t\t\t\t\t\t\t<button className=\"button-hover\">Upload</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='tagSec'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>Add a Tag </h3>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"tags\"\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetTempTag(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={tagTemp}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className='addTagsButton' onClick={() => {\r\n\t\t\t\t\t\t\tsetTag((tagsSt) => [...tagsSt, tagTemp]);\r\n\t\t\t\t\t\t\tsetTempTag('');\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>Tags: </h3>\r\n\t\t\t\t\t\t<div className='disTag'>{tagsSt.map(tag => {\r\n\t\t\t\t\t\t\treturn(<div className='tag'>{tag}</div>)\r\n\t\t\t\t\t\t})}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"button-bottoms\">\r\n\t\t\t\t\t<button className=\"button-hover\" type=\"submit\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"button-hover\"\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tconst post = {\r\n\t\t\t\t\t\t\t\tuser: `placeholder`,\r\n\t\t\t\t\t\t\t\ttags: tagsSt,\r\n\t\t\t\t\t\t\t\timage: images,\r\n\t\t\t\t\t\t\t\ttitle: titles,\r\n\t\t\t\t\t\t\t\tdescription: descs,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default MakePost;\r\n","import { LOGIN_SUBMIT } from '../actions';\r\n\r\nconst loginReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_SUBMIT:\r\n\t\t\tconst { email, password } = action.payload;\r\n\t\t\treturn [...state, { email, password }];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default loginReducer;\r\n","import { SUBMIT_POST } from '../actions';\r\n\r\nconst postReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SUBMIT_POST:\r\n\t\t\tconst { title, desc, image, tag1, tag2, tag3 } = action.payload;\r\n\t\t\treturn [...state, { title, desc, image, tag1, tag2, tag3 }];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default postReducer;\r\n","import { combineReducers } from 'redux';\r\nimport loginReducer from './loginReducer';\r\nimport postReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n\tposts: postReducer,\r\n\tusers: loginReducer,\r\n});\r\n","import \"./App.css\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport NavigationBar from \"./components/Navbar/NavigationBar\"\r\nimport Footer from \"./components/Footer/Footer\"\r\nimport Landing from \"./components/Landing/Landing\"\r\nimport UserProfile from \"./components/Profile/UserProfile\"\r\nimport Posts from \"./components/Posts/Posts\"\r\nimport MakePost from \"./components/MakePost/MakePost\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n// Redux\r\nimport { createStore } from \"redux\"\r\nimport { Provider } from \"react-redux\"\r\nimport reducers from \"./reduxcomps/reducers\"\r\n\r\nconst POST_STATE = \"POST_STATE\"\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(POST_STATE)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(POST_STATE, serializedState)\r\n  } catch (err) {\r\n    console.log(\"Error saving data:\" + err)\r\n  }\r\n}\r\n\r\nconst persistedState = loadState()\r\nconst store = createStore(reducers, persistedState)\r\nstore.subscribe(() => {\r\n  saveState(store.getState())\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <NavigationBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route path=\"/prof\" component={UserProfile} />\r\n            <Route path=\"/posts\" component={Posts} />\r\n            <Route path=\"/makepost\" component={MakePost} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n  <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n//serviceWorker.unregister();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}